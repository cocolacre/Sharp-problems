namespace Problems
{
    using System;
    using System.Collections.Generic;

    internal class Program
    {
        static IEnumerable<int> F()
        {
            yield return 0;
            Console.WriteLine("1");
        }
        public static void Main(string[] args)
        {
            foreach (int i in F())
            {
                Console.Write($"{i}");
            }
        }
    }
}

//Происходит две вещи:
//1. Функция объявлена как возвращающая перечисляемый инт, что позволяет указывать её как множество в foreach.
//2. Внутри функции использовано ключевое слово yield, позволяющее отложить выполнение функции до следующего её вызова.
//Оператор foreach вызывает функцию, чтобы получить первую итерацию i и получает 0, в значение i, которое выводится в консоль, затем он повторно обращается к функции, но так как по факту перечисление в ней не реализовано, происходит конец цикла, однако второй вызов функции позволяет ей завершиться и вывести "1".
//Эм, точнее так, поскольку функция возвращает значение только один раз, то цикл завершается. Поскольку отсутствие возвращаемого значения трактуется шарпом, как конец перечисления.
